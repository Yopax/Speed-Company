import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import Script from "next/script";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
      <Script id="typekit-script" strategy="afterInteractive">
        {`
          (function(d) {
            var config = {
              kitId: 'lrj7gue',
              scriptTimeout: 3000,
              async: true
            },
            h=d.documentElement,t=setTimeout(function(){
              h.className=h.className.replace(/\\bwf-loading\\b/g,"")+" wf-inactive";
            },config.scriptTimeout),tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;
            h.className+=" wf-loading";
            tk.src='https://use.typekit.net/'+config.kitId+'.js';
            tk.async=true;
            tk.onload=tk.onreadystatechange=function(){
              a=this.readyState;
              if(f||a&&a!="complete"&&a!="loaded") return;
              f=true;
              clearTimeout(t);
              try{Typekit.load(config)}catch(e){}
            };
            s.parentNode.insertBefore(tk,s);
          })(document);
        `}
      </Script>
      </head>
      <body className={inter.className}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
